syntax = "proto3";

package rocket.v1;

option go_package = "github.com/hown3d/chat-apiserver/proto/v1;rocket";

// import "google/api/annotations.proto";

// Protobuf Service of API
service RocketService {
  rpc Create(CreateRequest) returns (CreateResponse) {}
  rpc Update(UpdateRequest) returns (UpdateResponse) {}
  rpc Delete(DeleteRequest) returns (DeleteResponse) {}
  rpc Get(GetRequest) returns (GetResponse) {}
  rpc Status(StatusRequest) returns (stream StatusResponse) {}
  rpc GetAll(GetAllRequest) returns (GetAllResponse) {}
  rpc Logs(LogsRequest) returns (stream LogsResponse) {}
  rpc AvailableVersions(AvailableVersionsRequest)
      returns (AvailableVersionsResponse) {}
}

message CreateRequest {
  string name = 2;
  string namespace = 3;
  string rocket_version = 4;
  string mongodb_version = 5;
  // database size will be calculated in gigabyte
  int64 database_size = 6;
  string email = 7;
  int32 replicas = 8;
  string host = 9;
}

message CreateResponse {}

message GetRequest {
  string name = 2;
  string namespace = 3;
}

message GetResponse {
  string status = 1;
  string phase = 2;
  string webserver_version = 3;
  string mongodb_version = 4;
  string database_size = 5;
  repeated string pods = 6;
  string name = 7;
  string namespace = 8;
}

message GetAllRequest { string namespace = 2; }

message GetAllResponse { repeated GetResponse rockets = 1; }

message UpdateRequest { CreateRequest updated_rocket = 1; }

message UpdateResponse { bool successful = 1; }

message DeleteRequest {
  string name = 1;
  string namespace = 2;
}

message DeleteResponse {}

message LogsRequest {
  string name = 1;
  string namespace = 2;
  // wether to read from only mongodb or rocket webserver
  string pod = 3;
}

message LogsResponse {
  int32 level = 1;
  string message = 2;
  string pod = 3;
}

message StatusRequest {
  string name = 1;
  string namespace = 2;
}

message StatusResponse {
  string status = 1;
  bool ready = 2;
}

message AvailableVersionsRequest {
  enum Image {
    IMAGE_UNSPECIFIED = 0;
    IMAGE_MONGODB = 1;
    IMAGE_ROCKETCHAT = 2;
  }
  Image image = 1;
}

message AvailableVersionsResponse { repeated string tags = 1; }